{"version":3,"file":"get-change-detection-handling.js","sourceRoot":"ng://@ngrx/component/","sources":["src/core/cd-aware/get-change-detection-handling.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAGL,cAAc,IAAI,aAAa,EAC/B,UAAU,IAAI,SAAS,GACxB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;;;;;;AAE5C,MAAM,UAAU,yBAAyB,CACvC,MAAc,EACd,KAAwB;IAExB,IAAI,KAAK,EAAE,EAAE;QACX,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC;KACpD;SAAM;QACL,OAAO,OAAO,CAAC,MAAM,CAAC;YACpB,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;YAChC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACrC;AACH,CAAC","sourcesContent":["import {\n  ChangeDetectorRef,\n  NgZone,\n  ɵdetectChanges as detectChanges,\n  ɵmarkDirty as markDirty,\n} from '@angular/core';\n\nimport { isIvy } from '../utils/is-ivy';\nimport { hasZone } from '../utils/has-zone';\n\nexport function getChangeDetectionHandler(\n  ngZone: NgZone,\n  cdRef: ChangeDetectorRef\n): <T>(component?: T) => void {\n  if (isIvy()) {\n    return hasZone(ngZone) ? markDirty : detectChanges;\n  } else {\n    return hasZone(ngZone)\n      ? cdRef.markForCheck.bind(cdRef)\n      : cdRef.detectChanges.bind(cdRef);\n  }\n}\n"]}