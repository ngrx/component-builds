import { isObservable } from 'rxjs';
export function isPromiseGuard(value) {
    return (!!value &&
        typeof value.subscribe !== 'function' &&
        typeof value.then === 'function');
}
export function isObservableGuard(potentialObservable) {
    return isObservable(potentialObservable);
}
export function isOperateFnArrayGuard(op) {
    return op.every(function (i) { return typeof i !== 'string'; });
}
export function isStringArrayGuard(op) {
    return op.every(function (i) { return typeof i !== 'string'; });
}
export function isDefinedGuard(opr) {
    return !!opr;
}
export function isIterableGuard(obj) {
    if (obj === undefined) {
        return false;
    }
    return typeof obj[Symbol.iterator] === 'function';
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwaW5nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9jb21wb25lbnQvc3JjL2NvcmUvdXRpbHMvdHlwaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQWdDLE1BQU0sTUFBTSxDQUFDO0FBV2xFLE1BQU0sVUFBVSxjQUFjLENBQUksS0FBVTtJQUMxQyxPQUFPLENBQ0wsQ0FBQyxDQUFDLEtBQUs7UUFDUCxPQUFRLEtBQWEsQ0FBQyxTQUFTLEtBQUssVUFBVTtRQUM5QyxPQUFRLEtBQWEsQ0FBQyxJQUFJLEtBQUssVUFBVSxDQUMxQyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sVUFBVSxpQkFBaUIsQ0FDL0IsbUJBQXdCO0lBRXhCLE9BQU8sWUFBWSxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDM0MsQ0FBQztBQUVELE1BQU0sVUFBVSxxQkFBcUIsQ0FDbkMsRUFBUztJQUVULE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFDLENBQU0sSUFBSyxPQUFBLE9BQU8sQ0FBQyxLQUFLLFFBQVEsRUFBckIsQ0FBcUIsQ0FBQyxDQUFDO0FBQ3JELENBQUM7QUFFRCxNQUFNLFVBQVUsa0JBQWtCLENBQUMsRUFBUztJQUMxQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBQyxDQUFNLElBQUssT0FBQSxPQUFPLENBQUMsS0FBSyxRQUFRLEVBQXJCLENBQXFCLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBSSxHQUFRO0lBQ3hDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQztBQUNmLENBQUM7QUFFRCxNQUFNLFVBQVUsZUFBZSxDQUFJLEdBQVE7SUFDekMsSUFBSSxHQUFHLEtBQUssU0FBUyxFQUFFO1FBQ3JCLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFDRCxPQUFPLE9BQVEsR0FBVyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxVQUFVLENBQUM7QUFDN0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzT2JzZXJ2YWJsZSwgT2JzZXJ2YWJsZSwgT3BlcmF0b3JGdW5jdGlvbiB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IHR5cGUgUG90ZW50aWFsT2JzZXJ2YWJsZVZhbHVlPFQ+ID1cbiAgfCBPYnNlcnZhYmxlPFQ+XG4gIHwgUHJvbWlzZTxUPlxuICB8IHVuZGVmaW5lZFxuICB8IG51bGw7XG5leHBvcnQgdHlwZSBPdXRwdXQ8VD4gPVxuICB8IE9ic2VydmFibGU8VD5cbiAgfCBPYnNlcnZhYmxlPHVuZGVmaW5lZD5cbiAgfCBPYnNlcnZhYmxlPG51bGw+O1xuXG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlR3VhcmQ8VD4odmFsdWU6IGFueSk6IHZhbHVlIGlzIFByb21pc2U8VD4ge1xuICByZXR1cm4gKFxuICAgICEhdmFsdWUgJiZcbiAgICB0eXBlb2YgKHZhbHVlIGFzIGFueSkuc3Vic2NyaWJlICE9PSAnZnVuY3Rpb24nICYmXG4gICAgdHlwZW9mICh2YWx1ZSBhcyBhbnkpLnRoZW4gPT09ICdmdW5jdGlvbidcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JzZXJ2YWJsZUd1YXJkPFQ+KFxuICBwb3RlbnRpYWxPYnNlcnZhYmxlOiBhbnlcbik6IHBvdGVudGlhbE9ic2VydmFibGUgaXMgT2JzZXJ2YWJsZTxUPiB7XG4gIHJldHVybiBpc09ic2VydmFibGUocG90ZW50aWFsT2JzZXJ2YWJsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc09wZXJhdGVGbkFycmF5R3VhcmQ8VD4oXG4gIG9wOiBhbnlbXVxuKTogb3AgaXMgT3BlcmF0b3JGdW5jdGlvbjxULCBhbnk+W10ge1xuICByZXR1cm4gb3AuZXZlcnkoKGk6IGFueSkgPT4gdHlwZW9mIGkgIT09ICdzdHJpbmcnKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nQXJyYXlHdWFyZChvcDogYW55W10pOiBvcCBpcyBzdHJpbmdbXSB7XG4gIHJldHVybiBvcC5ldmVyeSgoaTogYW55KSA9PiB0eXBlb2YgaSAhPT0gJ3N0cmluZycpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNEZWZpbmVkR3VhcmQ8VD4ob3ByOiBhbnkpOiBvcHIgaXMgVCB7XG4gIHJldHVybiAhIW9wcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzSXRlcmFibGVHdWFyZDxUPihvYmo6IGFueSk6IG9iaiBpcyBBcnJheTxUPiB7XG4gIGlmIChvYmogPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHlwZW9mIChvYmogYXMgYW55KVtTeW1ib2wuaXRlcmF0b3JdID09PSAnZnVuY3Rpb24nO1xufVxuIl19