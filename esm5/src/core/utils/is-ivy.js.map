{"version":3,"file":"is-ivy.js","sourceRoot":"ng://@ngrx/component/","sources":["src/core/utils/is-ivy.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BlD,MAAM,UAAU,KAAK;;QACb,EAAE,GAAQ,aAAa,EAAE,CAAC,EAAE;IAElC,0CAA0C;IAC1C,0CAA0C;IAC1C,8EAA8E;IAC9E,OAAO,CACL,EAAE,KAAK,SAAS;QAChB,oCAAoC;QACpC,iEAAiE;QACjE,EAAE,CAAC,KAAK,KAAK,SAAS,CACvB,CAAC;AACJ,CAAC","sourcesContent":["import { getGlobalThis } from './get-global-this';\n\n/**\n * @description\n *\n * Determines if the application runs with ivy or not (ViewEngine)\n *\n * @usageNotes\n *\n * The function can be just imported and used everywhere.\n *\n * ```ts\n * import { isIvy } from `utils/is-ivy`;\n *\n * console.log(isIvy());  // true or false\n * ```\n *\n * The determination if an application runs with Ivy or not is done by following table:\n *\n * **Table for ng global presence in ViewEngine and Ivy for prod/dev modes**\n *\n *  | render   | ViewEngine | ViewEngine | Ivy       | Ivy       |\n *  | -------- | ---------- | ---------- | --------- | --------  |\n *  | mode     | prod       | dev        | prod      | dev       |\n *  | ng       | present    | present    | undefined | present   |\n *  | ng.probe | present    | present    | undefined | undefined |\n *\n *  > So for Ivy we need to make sure that ng is undefined or,\n *  > in case of dev environment, ng.probe is undefined\n *\n */\nexport function isIvy(): boolean {\n  const ng: any = getGlobalThis().ng;\n\n  // Is the global ng object is unavailable?\n  // ng === undefined in Ivy production mode\n  // View Engine has the ng object both in development mode and production mode.\n  return (\n    ng === undefined ||\n    // in case we are in dev mode in ivy\n    // `probe` property is available on ng object we use View Engine.\n    ng.probe === undefined\n  );\n}\n"]}