{"version":3,"file":"ngrx-component.mjs","sources":["../../../../modules/component/src/core/zone-helpers.ts","../../../../modules/component/src/core/tick-scheduler.ts","../../../../modules/component/src/core/render-scheduler.ts","../../../../modules/component/src/core/render-event/handlers.ts","../../../../modules/component/src/core/potential-observable.ts","../../../../modules/component/src/core/render-event/manager.ts","../../../../modules/component/src/let/let.directive.ts","../../../../modules/component/src/push/push.pipe.ts","../../../../modules/component/index.ts","../../../../modules/component/ngrx-component.ts"],"sourcesContent":["import { NgZone } from '@angular/core';\n\nexport function isNgZone(zone: unknown): zone is NgZone {\n  return zone instanceof NgZone;\n}\n","import { ApplicationRef, inject, Injectable, NgZone } from '@angular/core';\nimport { isNgZone } from './zone-helpers';\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: () => {\n    const zone = inject(NgZone);\n    return isNgZone(zone)\n      ? new NoopTickScheduler()\n      : inject(AnimationFrameTickScheduler);\n  },\n})\nexport abstract class TickScheduler {\n  abstract schedule(): void;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimationFrameTickScheduler extends TickScheduler {\n  private isScheduled = false;\n\n  constructor(private readonly appRef: ApplicationRef) {\n    super();\n  }\n\n  schedule(): void {\n    if (!this.isScheduled) {\n      this.isScheduled = true;\n      requestAnimationFrame(() => {\n        this.appRef.tick();\n        this.isScheduled = false;\n      });\n    }\n  }\n}\n\nexport class NoopTickScheduler extends TickScheduler {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  schedule(): void {}\n}\n","import { ChangeDetectorRef, inject, Injectable } from '@angular/core';\nimport { TickScheduler } from './tick-scheduler';\n\n/**\n * Provides rendering functionality regardless of whether `zone.js` is present\n * or not. It must be provided at the component/directive level.\n *\n * @usageNotes\n *\n * ### Rerender zone-less app on route changes\n *\n * ```ts\n * @Component({\n *   selector: 'app-root',\n *   template: '<router-outlet>',\n *   // ðŸ‘‡ `RenderScheduler` is provided at the component level\n *   providers: [RenderScheduler],\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * export class AppComponent implements OnInit {\n *   constructor(\n *     private readonly router: Router,\n *     private readonly renderScheduler: RenderScheduler\n *   ) {}\n *\n *   ngOnInit(): void {\n *     this.router.events\n *       .pipe(filter((e) => e instanceof NavigationEnd))\n *       .subscribe(() => this.renderScheduler.schedule());\n *   }\n * }\n * ```\n *\n * ### Rerender component on interval\n *\n * ```ts\n * @Component({\n *   selector: 'app-interval',\n *   template: '{{ elapsedTime }}ms',\n *   // ðŸ‘‡ `RenderScheduler` is provided at the component level\n *   providers: [RenderScheduler],\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n * })\n * export class IntervalComponent implements OnInit {\n *   elapsedTime = 0;\n *\n *   constructor(private readonly renderScheduler: RenderScheduler) {}\n *\n *   ngOnInit(): void {\n *     setInterval(() => {\n *       this.elapsedTime += 1000;\n *       this.renderScheduler.schedule();\n *     }, 1000);\n *   }\n * }\n * ```\n */\n@Injectable()\nexport class RenderScheduler {\n  constructor(\n    private readonly cdRef: ChangeDetectorRef,\n    private readonly tickScheduler: TickScheduler\n  ) {}\n\n  /**\n   * Marks component and its ancestors as dirty.\n   * It also schedules a new change detection cycle in zone-less mode.\n   */\n  schedule(): void {\n    this.cdRef.markForCheck();\n    this.tickScheduler.schedule();\n  }\n}\n\nexport function createRenderScheduler(): RenderScheduler {\n  return new RenderScheduler(inject(ChangeDetectorRef), inject(TickScheduler));\n}\n","import {\n  CompleteRenderEvent,\n  ErrorRenderEvent,\n  NextRenderEvent,\n  RenderEvent,\n  SuspenseRenderEvent,\n} from './models';\n\nexport interface RenderEventHandlers<T> {\n  suspense?(event: SuspenseRenderEvent): void;\n  next?(event: NextRenderEvent<T>): void;\n  error?(event: ErrorRenderEvent): void;\n  complete?(event: CompleteRenderEvent): void;\n}\n\nexport function combineRenderEventHandlers<T>(\n  handlers: RenderEventHandlers<T>\n): (event: RenderEvent<T>) => void {\n  return (event) => handlers[event.type]?.(event as any);\n}\n","import { combineLatest, from, isObservable, Observable } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\ntype Primitive = string | number | bigint | boolean | symbol | null | undefined;\n\ntype ObservableOrPromise<T> = Observable<T> | PromiseLike<T>;\n\ntype ObservableDictionary<PO> = Required<{\n  [Key in keyof PO]: Observable<unknown>;\n}>;\n\nexport type PotentialObservableResult<\n  PO,\n  ExtendedResult = never\n> = PO extends ObservableOrPromise<infer Result>\n  ? Result | ExtendedResult\n  : PO extends Primitive\n  ? PO\n  : keyof PO extends never\n  ? PO\n  : PO extends ObservableDictionary<PO>\n  ?\n      | {\n          [Key in keyof PO]: PO[Key] extends Observable<infer Value>\n            ? Value\n            : never;\n        }\n      | ExtendedResult\n  : PO;\n\nexport function fromPotentialObservable<PO>(\n  potentialObservable: PO\n): Observable<PotentialObservableResult<PO>> {\n  type Result = ReturnType<typeof fromPotentialObservable<PO>>;\n\n  if (isObservable(potentialObservable)) {\n    return potentialObservable as Result;\n  }\n\n  if (isObservableDictionary(potentialObservable)) {\n    return combineLatest(\n      toDistinctObsDictionary(potentialObservable)\n    ) as Result;\n  }\n\n  if (isPromiseLike(potentialObservable)) {\n    return from(potentialObservable) as Result;\n  }\n\n  return new Observable<PO>((subscriber) => {\n    subscriber.next(potentialObservable);\n  }) as Result;\n}\n\nfunction isPromiseLike(value: unknown): value is PromiseLike<unknown> {\n  return typeof (value as PromiseLike<unknown>)?.then === 'function';\n}\n\nfunction isObservableDictionary(\n  value: unknown\n): value is Record<string, Observable<unknown>> {\n  return (\n    isDictionary(value) &&\n    Object.keys(value).length > 0 &&\n    Object.values(value).every(isObservable)\n  );\n}\n\nfunction isDictionary(value: unknown): value is Record<string, unknown> {\n  return !!value && typeof value === 'object' && !Array.isArray(value);\n}\n\nfunction toDistinctObsDictionary<\n  OD extends Record<string, Observable<unknown>>\n>(obsDictionary: OD): OD {\n  return Object.keys(obsDictionary).reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: obsDictionary[key].pipe(distinctUntilChanged()),\n    }),\n    {} as OD\n  );\n}\n","import { Observable, pipe, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { ErrorRenderEvent, NextRenderEvent, RenderEvent } from './models';\nimport { combineRenderEventHandlers, RenderEventHandlers } from './handlers';\nimport {\n  fromPotentialObservable,\n  PotentialObservableResult,\n} from '../potential-observable';\nimport { untracked } from '@angular/core';\n\nexport interface RenderEventManager<PO> {\n  nextPotentialObservable(potentialObservable: PO): void;\n  handlePotentialObservableChanges(): Observable<\n    RenderEvent<PotentialObservableResult<PO>>\n  >;\n}\n\nexport function createRenderEventManager<PO>(\n  handlers: RenderEventHandlers<PotentialObservableResult<PO>>\n): RenderEventManager<PO> {\n  const handleRenderEvent = combineRenderEventHandlers(handlers);\n  const potentialObservable$ = new ReplaySubject<PO>(1);\n\n  return {\n    nextPotentialObservable(potentialObservable) {\n      potentialObservable$.next(potentialObservable);\n    },\n    handlePotentialObservableChanges() {\n      return potentialObservable$.pipe(\n        distinctUntilChanged(),\n        switchMapToRenderEvent(),\n        distinctUntilChanged(renderEventComparator),\n        tap(handleRenderEvent)\n      );\n    },\n  };\n}\n\nfunction switchMapToRenderEvent<PO>(): (\n  source: Observable<PO>\n) => Observable<RenderEvent<PotentialObservableResult<PO>>> {\n  return pipe(\n    switchMap((potentialObservable) => {\n      const observable$ = fromPotentialObservable(potentialObservable);\n      let reset = true;\n      let synchronous = true;\n\n      return new Observable<RenderEvent<PotentialObservableResult<PO>>>(\n        (subscriber) => {\n          const subscription = untracked(() =>\n            observable$.subscribe({\n              next(value) {\n                subscriber.next({ type: 'next', value, reset, synchronous });\n                reset = false;\n              },\n              error(error) {\n                subscriber.next({ type: 'error', error, reset, synchronous });\n                reset = false;\n              },\n              complete() {\n                subscriber.next({ type: 'complete', reset, synchronous });\n                reset = false;\n              },\n            })\n          );\n\n          if (reset) {\n            subscriber.next({ type: 'suspense', reset, synchronous: true });\n            reset = false;\n          }\n          synchronous = false;\n\n          return subscription;\n        }\n      );\n    })\n  );\n}\n\nfunction renderEventComparator<T>(\n  previous: RenderEvent<T>,\n  current: RenderEvent<T>\n): boolean {\n  if (previous.type !== current.type || previous.reset !== current.reset) {\n    return false;\n  }\n\n  if (current.type === 'next') {\n    return (previous as NextRenderEvent<T>).value === current.value;\n  }\n\n  if (current.type === 'error') {\n    return (previous as ErrorRenderEvent).error === current.error;\n  }\n\n  return true;\n}\n","import {\n  Directive,\n  ErrorHandler,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PotentialObservableResult } from '../core/potential-observable';\nimport { RenderScheduler } from '../core/render-scheduler';\nimport { createRenderEventManager } from '../core/render-event/manager';\n\ntype LetViewContextValue<PO> = PotentialObservableResult<PO>;\n\nexport interface LetViewContext<PO> {\n  /**\n   * using `$implicit` to enable `let` syntax: `*ngrxLet=\"obs$; let o\"`\n   */\n  $implicit: LetViewContextValue<PO>;\n  /**\n   * using `ngrxLet` to enable `as` syntax: `*ngrxLet=\"obs$ as o\"`\n   */\n  ngrxLet: LetViewContextValue<PO>;\n  /**\n   * `*ngrxLet=\"obs$; let e = error\"` or `*ngrxLet=\"obs$; error as e\"`\n   */\n  error: any;\n  /**\n   * `*ngrxLet=\"obs$; let c = complete\"` or `*ngrxLet=\"obs$; complete as c\"`\n   */\n  complete: boolean;\n}\n\n/**\n *\n * @description\n *\n * The `*ngrxLet` directive serves a convenient way of binding observables to a view context\n * (DOM element's scope). It also helps with several internal processing under the hood.\n *\n * @usageNotes\n *\n * ### Displaying Observable Values\n *\n * ```html\n * <ng-container *ngrxLet=\"number$ as n\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n *\n * <ng-container *ngrxLet=\"number$; let n\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n * ```\n *\n * ### Tracking Different Observable Events\n *\n * ```html\n * <ng-container *ngrxLet=\"number$ as n; error as e; complete as c\">\n *   <app-number [number]=\"n\" *ngIf=\"!e && !c\">\n *   </app-number>\n *\n *   <p *ngIf=\"e\">There is an error: {{ e }}</p>\n *   <p *ngIf=\"c\">Observable is completed.</p>\n * </ng-container>\n * ```\n *\n * ### Combining Multiple Observables\n *\n * ```html\n * <ng-container *ngrxLet=\"{ users: users$, query: query$ } as vm\">\n *   <app-search-bar [query]=\"vm.query\"></app-search-bar>\n *   <app-user-list [users]=\"vm.users\"></app-user-list>\n * </ng-container>\n * ```\n *\n * ### Using Suspense Template\n *\n * ```html\n * <ng-container *ngrxLet=\"number$ as n; suspenseTpl: loading\">\n *   <app-number [number]=\"n\"></app-number>\n * </ng-container>\n *\n * <ng-template #loading>\n *   <p>Loading...</p>\n * </ng-template>\n * ```\n *\n * ### Using Aliases for Non-Observable Values\n *\n * ```html\n * <ng-container *ngrxLet=\"userForm.controls.email as email\">\n *   <input type=\"text\" [formControl]=\"email\" />\n *\n *   <ng-container *ngIf=\"email.errors && (email.touched || email.dirty)\">\n *     <p *ngIf=\"email.errors.required\">This field is required.</p>\n *     <p *ngIf=\"email.errors.email\">This field must be an email.</p>\n *   </ng-container>\n * </ng-container>\n * ```\n *\n * @publicApi\n */\n@Directive({\n  standalone: true,\n  selector: '[ngrxLet]',\n  providers: [RenderScheduler],\n})\nexport class LetDirective<PO> implements OnInit, OnDestroy {\n  private isMainViewCreated = false;\n  private isSuspenseViewCreated = false;\n  private readonly viewContext: LetViewContext<PO | undefined> = {\n    $implicit: undefined,\n    ngrxLet: undefined,\n    error: undefined,\n    complete: false,\n  };\n  private readonly renderEventManager = createRenderEventManager<PO>({\n    suspense: () => {\n      this.viewContext.$implicit = undefined;\n      this.viewContext.ngrxLet = undefined;\n      this.viewContext.error = undefined;\n      this.viewContext.complete = false;\n\n      this.renderSuspenseView();\n    },\n    next: (event) => {\n      this.viewContext.$implicit = event.value;\n      this.viewContext.ngrxLet = event.value;\n\n      if (event.reset) {\n        this.viewContext.error = undefined;\n        this.viewContext.complete = false;\n      }\n\n      this.renderMainView(event.synchronous);\n    },\n    error: (event) => {\n      this.viewContext.error = event.error;\n\n      if (event.reset) {\n        this.viewContext.$implicit = undefined;\n        this.viewContext.ngrxLet = undefined;\n        this.viewContext.complete = false;\n      }\n\n      this.renderMainView(event.synchronous);\n      this.errorHandler.handleError(event.error);\n    },\n    complete: (event) => {\n      this.viewContext.complete = true;\n\n      if (event.reset) {\n        this.viewContext.$implicit = undefined;\n        this.viewContext.ngrxLet = undefined;\n        this.viewContext.error = undefined;\n      }\n\n      this.renderMainView(event.synchronous);\n    },\n  });\n  private readonly subscription = new Subscription();\n\n  @Input()\n  set ngrxLet(potentialObservable: PO) {\n    this.renderEventManager.nextPotentialObservable(potentialObservable);\n  }\n\n  @Input('ngrxLetSuspenseTpl') suspenseTemplateRef?: TemplateRef<unknown>;\n\n  constructor(\n    private readonly mainTemplateRef: TemplateRef<\n      LetViewContext<PO | undefined>\n    >,\n    private readonly viewContainerRef: ViewContainerRef,\n    private readonly errorHandler: ErrorHandler,\n    private readonly renderScheduler: RenderScheduler\n  ) {}\n\n  static ngTemplateContextGuard<PO>(\n    dir: LetDirective<PO>,\n    ctx: unknown\n  ): ctx is LetViewContext<PO> {\n    return true;\n  }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.renderEventManager.handlePotentialObservableChanges().subscribe()\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private renderMainView(isSyncEvent: boolean): void {\n    if (this.isSuspenseViewCreated) {\n      this.isSuspenseViewCreated = false;\n      this.viewContainerRef.clear();\n    }\n\n    if (!this.isMainViewCreated) {\n      this.isMainViewCreated = true;\n      this.viewContainerRef.createEmbeddedView(\n        this.mainTemplateRef,\n        this.viewContext\n      );\n    }\n\n    if (!isSyncEvent) {\n      this.renderScheduler.schedule();\n    }\n  }\n\n  private renderSuspenseView(): void {\n    if (this.isMainViewCreated) {\n      this.isMainViewCreated = false;\n      this.viewContainerRef.clear();\n    }\n\n    if (this.suspenseTemplateRef && !this.isSuspenseViewCreated) {\n      this.isSuspenseViewCreated = true;\n      this.viewContainerRef.createEmbeddedView(this.suspenseTemplateRef);\n    }\n  }\n}\n","import { ErrorHandler, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { Unsubscribable } from 'rxjs';\nimport { PotentialObservableResult } from '../core/potential-observable';\nimport { createRenderScheduler } from '../core/render-scheduler';\nimport { createRenderEventManager } from '../core/render-event/manager';\n\ntype PushPipeResult<PO> = PotentialObservableResult<PO, undefined>;\n\n/**\n * @description\n *\n * The `ngrxPush` pipe serves as a drop-in replacement for the `async` pipe.\n * It contains intelligent handling of change detection to enable us\n * running in zone-full as well as zone-less mode without any changes to the code.\n *\n * @usageNotes\n *\n * ### Displaying Observable Values\n *\n * ```html\n * <p>{{ number$ | ngrxPush }}</p>\n *\n * <ng-container *ngIf=\"number$ | ngrxPush as n\">{{ n }}</ng-container>\n *\n * <app-number [number]=\"number$ | ngrxPush\"></app-number>\n * ```\n *\n * ### Combining Multiple Observables\n *\n * ```html\n * <code>\n *   {{ { users: users$, query: query$ } | ngrxPush | json }}\n * </code>\n * ```\n *\n * @publicApi\n */\n@Pipe({\n  standalone: true,\n  name: 'ngrxPush',\n  pure: false,\n})\nexport class PushPipe implements PipeTransform, OnDestroy {\n  private renderedValue: unknown;\n  private readonly renderScheduler = createRenderScheduler();\n  private readonly renderEventManager = createRenderEventManager({\n    suspense: (event) => this.setRenderedValue(undefined, event.synchronous),\n    next: (event) => this.setRenderedValue(event.value, event.synchronous),\n    error: (event) => {\n      if (event.reset) {\n        this.setRenderedValue(undefined, event.synchronous);\n      }\n      this.errorHandler.handleError(event.error);\n    },\n    complete: (event) => {\n      if (event.reset) {\n        this.setRenderedValue(undefined, event.synchronous);\n      }\n    },\n  });\n  private readonly subscription: Unsubscribable;\n\n  constructor(private readonly errorHandler: ErrorHandler) {\n    this.subscription = this.renderEventManager\n      .handlePotentialObservableChanges()\n      .subscribe();\n  }\n\n  transform<PO>(potentialObservable: PO): PushPipeResult<PO> {\n    this.renderEventManager.nextPotentialObservable(potentialObservable);\n    return this.renderedValue as PushPipeResult<PO>;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private setRenderedValue(value: unknown, isSyncEvent: boolean): void {\n    if (value !== this.renderedValue) {\n      this.renderedValue = value;\n\n      if (!isSyncEvent) {\n        this.renderScheduler.schedule();\n      }\n    }\n  }\n}\n","/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.TickScheduler","i1.RenderScheduler"],"mappings":"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"}