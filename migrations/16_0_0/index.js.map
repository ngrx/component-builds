{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/component/migrations/16_0_0/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ts from 'typescript';\nimport { Rule, chain, Tree } from '@angular-devkit/schematics';\nimport {\n  visitTSSourceFiles,\n  commitChanges,\n  createReplaceChange,\n  ReplaceChange,\n} from '../../schematics-core';\n\nconst letModuleText = 'LetModule';\nconst letDirectiveText = 'LetDirective';\nconst pushModuleText = 'PushModule';\nconst pushPipeText = 'PushPipe';\nconst moduleLocations = {\n  imports: ['NgModule', 'Component'],\n  exports: ['NgModule'],\n};\n\nfunction migrateToStandaloneAPIs() {\n  return (tree: Tree) => {\n    visitTSSourceFiles(tree, (sourceFile) => {\n      const componentImports = sourceFile.statements\n        .filter(ts.isImportDeclaration)\n        .filter(({ moduleSpecifier }) =>\n          moduleSpecifier.getText(sourceFile).includes('@ngrx/component')\n        );\n\n      if (componentImports.length === 0) {\n        return;\n      }\n\n      const ngModuleReplacements = findNgModuleReplacements(sourceFile);\n      const possibleModulesUsageCount =\n        findPossibleModulesUsageCount(sourceFile);\n      const importAdditionReplacements = findImportDeclarationAdditions(\n        sourceFile,\n        componentImports\n      );\n      const jsImportDeclarationReplacements =\n        possibleModulesUsageCount >\n        ngModuleReplacements.length + importAdditionReplacements.length\n          ? importAdditionReplacements\n          : findImportDeclarationReplacements(sourceFile, componentImports);\n\n      const changes = [\n        ...jsImportDeclarationReplacements,\n        ...ngModuleReplacements,\n      ];\n\n      commitChanges(tree, sourceFile.fileName, changes);\n    });\n  };\n}\n\nfunction findImportDeclarationReplacements(\n  sourceFile: ts.SourceFile,\n  imports: ts.ImportDeclaration[]\n) {\n  return findImportDeclarations(sourceFile, imports)\n    .map(({ specifier, oldText, newText }) =>\n      !!specifier && !!oldText\n        ? createReplaceChange(sourceFile, specifier, oldText, newText)\n        : undefined\n    )\n    .filter((change) => !!change) as Array<ReplaceChange>;\n}\n\nfunction findImportDeclarationAdditions(\n  sourceFile: ts.SourceFile,\n  imports: ts.ImportDeclaration[]\n) {\n  return findImportDeclarations(sourceFile, imports)\n    .map(({ specifier, oldText, newText }) =>\n      !!specifier && !!oldText\n        ? createReplaceChange(\n            sourceFile,\n            specifier,\n            oldText,\n            `${oldText}, ${newText}`\n          )\n        : undefined\n    )\n    .filter((change) => !!change) as Array<ReplaceChange>;\n}\n\nfunction findImportDeclarations(\n  sourceFile: ts.SourceFile,\n  imports: ts.ImportDeclaration[]\n) {\n  return imports\n    .map((p) => (p?.importClause?.namedBindings as ts.NamedImports)?.elements)\n    .reduce(\n      (imports, curr) => imports.concat(curr ?? []),\n      [] as ts.ImportSpecifier[]\n    )\n    .map((specifier) => {\n      if (!ts.isImportSpecifier(specifier)) {\n        return { hit: false };\n      }\n\n      if (specifier.name.text === letModuleText) {\n        return {\n          hit: true,\n          specifier,\n          oldText: specifier.name.text,\n          newText: letDirectiveText,\n        };\n      }\n\n      if (specifier.name.text === pushModuleText) {\n        return {\n          hit: true,\n          specifier,\n          oldText: specifier.name.text,\n          newText: pushPipeText,\n        };\n      }\n\n      // if `LetModule` import is renamed\n      if (specifier.propertyName?.text === letModuleText) {\n        return {\n          hit: true,\n          specifier,\n          oldText: specifier.propertyName.text,\n          newText: letDirectiveText,\n        };\n      }\n\n      // if `PushModule` import is renamed\n      if (specifier.propertyName?.text === pushModuleText) {\n        return {\n          hit: true,\n          specifier,\n          oldText: specifier.propertyName.text,\n          newText: pushPipeText,\n        };\n      }\n\n      return { hit: false };\n    })\n    .filter(({ hit }) => hit);\n}\n\nfunction findPossibleModulesUsageCount(sourceFile: ts.SourceFile): number {\n  let count = 0;\n  ts.forEachChild(sourceFile, (node) => countUsages(node));\n  return count;\n\n  function countUsages(node: ts.Node) {\n    if (\n      ts.isIdentifier(node) &&\n      (node.text === letModuleText || node.text === pushModuleText)\n    ) {\n      count = count + 1;\n    }\n\n    ts.forEachChild(node, (childNode) => countUsages(childNode));\n  }\n}\n\nfunction findNgModuleReplacements(sourceFile: ts.SourceFile) {\n  const changes: ReplaceChange[] = [];\n  ts.forEachChild(sourceFile, (node) => find(node, changes));\n  return changes;\n\n  function find(node: ts.Node, changes: ReplaceChange[]) {\n    let change = undefined;\n\n    if (\n      ts.isIdentifier(node) &&\n      (node.text === letModuleText || node.text === pushModuleText) &&\n      ts.isArrayLiteralExpression(node.parent) &&\n      ts.isPropertyAssignment(node.parent.parent)\n    ) {\n      const property = node.parent.parent;\n      if (ts.isIdentifier(property.name)) {\n        const propertyName = String(property.name.escapedText);\n        if (Object.keys(moduleLocations).includes(propertyName)) {\n          const decorator = property.parent.parent.parent;\n          if (\n            ts.isDecorator(decorator) &&\n            ts.isCallExpression(decorator.expression) &&\n            ts.isIdentifier(decorator.expression.expression) &&\n            moduleLocations[propertyName as 'imports' | 'exports'].includes(\n              String(decorator.expression.expression.escapedText)\n            )\n          ) {\n            change = {\n              node: node,\n              oldText: node.text,\n              newText:\n                node.text === letModuleText ? letDirectiveText : pushPipeText,\n            };\n          }\n        }\n      }\n    }\n\n    if (change) {\n      changes.push(\n        createReplaceChange(\n          sourceFile,\n          change.node,\n          change.oldText,\n          change.newText\n        )\n      );\n    }\n\n    ts.forEachChild(node, (childNode) => find(childNode, changes));\n  }\n}\n\nexport default function (): Rule {\n  return chain([migrateToStandaloneAPIs()]);\n}\n"]}